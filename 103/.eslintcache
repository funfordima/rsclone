[{"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\index.tsx":"1","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\reportWebVitals.js":"2","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\components\\mainServices\\mainServices.tsx":"3","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\components\\mainServices\\servicesTitle\\servicesTitle.tsx":"4","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\components\\mainServices\\servicesContent\\servicesContent.tsx":"5","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\components\\mainServices\\servicesContentLink\\servicesContentLink.tsx":"6","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\App.tsx":"7","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CreateHeader\\index.tsx":"8","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\AuthorizationPage.tsx":"9","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\MainSearch\\index.tsx":"10","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\LogoLink\\index.tsx":"11","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\UserBar\\index.tsx":"12","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CitySearch\\index.tsx":"13","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\Modal\\index.tsx":"14","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\LogoSvg\\index.tsx":"15","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CitySearch\\CityFilterList\\index.tsx":"16","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CitySearch\\CityFilterSearch\\index.tsx":"17","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CitySearch\\CityFilterSearch\\InputForCity\\index.tsx":"18","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\styledComponents.ts":"19","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\Firebase\\index.tsx":"20","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\LogInPage.tsx":"21","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\SignInPage.tsx":"22","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\ModalUserBar\\index.tsx":"23","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\UserPage.tsx":"24","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\components\\ProfileMenu.tsx":"25","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\components\\UserContentPage.tsx":"26","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\components\\UserPasswordPage.tsx":"27","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\ResetPage.tsx":"28"},{"size":288,"mtime":1611427513084,"results":"29","hashOfConfig":"30"},{"size":368,"mtime":1610731095192,"results":"31","hashOfConfig":"30"},{"size":661,"mtime":1610731095125,"results":"32","hashOfConfig":"30"},{"size":276,"mtime":1610731095154,"results":"33","hashOfConfig":"30"},{"size":1149,"mtime":1610731095141,"results":"34","hashOfConfig":"30"},{"size":283,"mtime":1610731095146,"results":"35","hashOfConfig":"30"},{"size":2587,"mtime":1611427512332,"results":"36","hashOfConfig":"30"},{"size":1043,"mtime":1611504424561,"results":"37","hashOfConfig":"30"},{"size":3501,"mtime":1611502606947,"results":"38","hashOfConfig":"30"},{"size":2829,"mtime":1611429748781,"results":"39","hashOfConfig":"30"},{"size":685,"mtime":1611428327479,"results":"40","hashOfConfig":"30"},{"size":4721,"mtime":1611495181579,"results":"41","hashOfConfig":"30"},{"size":3794,"mtime":1611492457747,"results":"42","hashOfConfig":"30"},{"size":4407,"mtime":1611504010578,"results":"43","hashOfConfig":"30"},{"size":1725,"mtime":1611428223509,"results":"44","hashOfConfig":"30"},{"size":942,"mtime":1610731094971,"results":"45","hashOfConfig":"30"},{"size":1088,"mtime":1610731094984,"results":"46","hashOfConfig":"30"},{"size":825,"mtime":1610731094981,"results":"47","hashOfConfig":"30"},{"size":7649,"mtime":1611503547102,"results":"48","hashOfConfig":"30"},{"size":2495,"mtime":1610905194369,"results":"49","hashOfConfig":"30"},{"size":5928,"mtime":1611427513028,"results":"50","hashOfConfig":"30"},{"size":5056,"mtime":1611427513036,"results":"51","hashOfConfig":"30"},{"size":3076,"mtime":1611427513018,"results":"52","hashOfConfig":"30"},{"size":2740,"mtime":1611502151235,"results":"53","hashOfConfig":"30"},{"size":3712,"mtime":1611501384525,"results":"54","hashOfConfig":"30"},{"size":7458,"mtime":1611500326541,"results":"55","hashOfConfig":"30"},{"size":3720,"mtime":1611502046887,"results":"56","hashOfConfig":"30"},{"size":3452,"mtime":1611427513032,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"qj85p2",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\index.tsx",[],[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\reportWebVitals.js",[],[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\components\\mainServices\\mainServices.tsx",["124"],"import React from 'react';\nimport './services.css';\nimport ServicesTitle from './servicesTitle/servicesTitle';\nimport ServicesContent from './servicesContent/servicesContent';\n\nexport interface mainServicesProps {\n  serviceName: string\n  serviceLinks: string[]\n  serviceImagesLinks: string[]\n}\n\nexport default function MainServices({\n  serviceName,\n  serviceLinks,\n  serviceImagesLinks,\n}: mainServicesProps) {\n  return (\n    <div className='services-wrapper'>\n      <div className='services-container'>\n        <ServicesTitle title = {serviceName}/>\n        <ServicesContent links = {serviceLinks} images = {serviceImagesLinks} />\n      </div>\n    </div>\n  )\n}","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\components\\mainServices\\servicesTitle\\servicesTitle.tsx",["125"],"import React from 'react';\nimport './servicesTitle.css';\n\nexport interface servicesTitleProps {\n  title: string\n}\n\nexport default function ServicesTitle({\n    title,\n}: servicesTitleProps) {\n  return (\n    <div className='service-name'>\n      <h4>{title}</h4>\n    </div>\n  )\n}","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\components\\mainServices\\servicesContent\\servicesContent.tsx",["126"],"import React from 'react';\nimport './servicesContent.css';\nimport ServicesContentLink from '../servicesContentLink/servicesContentLink'\n\nexport interface servicesContentProps {\n  links: string[]\n  images: string[]\n}\n\nexport default function ServicesContent({\n    links,\n    images,\n}: servicesContentProps) {\n  return (\n    <div className='service-content-wrapper'>\n        <div className='service-content'>\n            <div className='service-item'>\n                <ServicesContentLink link = {links[0]} image = {images[0]}/>\n            </div>\n            <div className='service-item'>\n                <ServicesContentLink link = {links[1]} image = {images[1]}/>\n                <ServicesContentLink link = {links[2]} image = {images[2]}/>\n            </div>\n            <div className='service-item'>\n                <ServicesContentLink link = {links[3]} image = {images[3]}/>\n            </div>\n            <div className='service-item'>\n                <ServicesContentLink link = {links[4]} image = {images[4]}/>\n                <ServicesContentLink link = {links[5]} image = {images[5]}/>\n            </div>\n        </div>\n    </div>\n  )\n}","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\components\\mainServices\\servicesContentLink\\servicesContentLink.tsx",["127"],"import React from 'react';\n\nexport interface servicesContentLinkProps {\n  link: string\n  image: string\n}\n\nexport default function ServicesContentLink({\n    link,\n    image,\n}: servicesContentLinkProps) {\n  return (\n    <a href={link}>\n        <img src={image} alt=\"\"/>\n    </a>\n  )\n}","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\App.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CreateHeader\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\AuthorizationPage.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\MainSearch\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\LogoLink\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\UserBar\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CitySearch\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\Modal\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\LogoSvg\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CitySearch\\CityFilterList\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CitySearch\\CityFilterSearch\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\CitySearch\\CityFilterSearch\\InputForCity\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\styledComponents.ts",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\Firebase\\index.tsx",["128","129","130","131","132","133"],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\LogInPage.tsx",["134"],"import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { Form, InputText, FormField, TogglePassword, InputBtnSignIn, AlertSuccess } from '../styledComponents';\nimport { ResetPasswordContext } from '../../App';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst InputPassword = styled(InputText)`\n  padding-right: 48px;\n`;\n\nconst FormOptions = styled.div`\n  margin: 16px 0 0 0;\n  font-size: 15px;\n  text-align: right;\n\n  & div {\n    display: none;\n  }\n\n  & a {\n    color: #0095cc;\n    text-decoration: none;\n  }\n`;\n\ninterface LogInPageProps {\n  onToggleErrorComponent: () => void;\n  toggleEnterUser: (value: boolean) => void;\n}\n\nexport class LogInPage extends React.Component<LogInPageProps> {\n  constructor(props: LogInPageProps) {\n    super(props);\n    this.state = {\n      'email': '',\n      'password': '',\n      'isSignIn': false,\n      'isChangeEmail': '',\n    };\n    this.openPasswordRef = React.createRef();\n  }\n\n  toggleVisiblePassword = (): void => {\n    this.openPasswordRef.current.previousElementSibling.setAttribute('type', this.openPasswordRef.current.previousElementSibling.getAttribute('type') === 'text' ? 'password' : 'text');\n  }\n\n  handleChangeInput = ({ target: { value, id } }: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      [id]: value,\n    });\n    this.props.onToggleErrorComponent(false);\n  }\n\n  /* eslint-disable no-debugger */\n  logInAccount = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    event.preventDefault();\n    const { email, password } = this.state;\n\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ isSignIn: true });\n        this.props.toggleEnterUser(true);\n      })\n      .catch((error) => {\n        this.props.onToggleErrorComponent(true);\n        this.props.toggleEnterUser(false);\n      });\n  }\n\n  toggleChecked = (): void => {\n    console.log(1);\n  };\n\n  componentDidMount = (): void => {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ isSignIn: !!user });\n      this.props.toggleEnterUser(!!user);\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <>\n        <ResetPasswordContext.Consumer>\n          {context => context && <AlertSuccess>{context}</AlertSuccess>}\n        </ResetPasswordContext.Consumer>\n        {/* {ResetPasswordContext && <AlertSuccess>{ResetPasswordContext}</AlertSuccess>} */}\n        < Form >\n          <FormField>\n            <InputText\n              tabIndex=\"1\"\n              id=\"email\"\n              name=\"username\"\n              placeholder=\"E-mail\"\n              type=\"text\"\n              autocomplete=\"off\"\n              onChange={this.handleChangeInput}\n            />\n          </FormField>\n          {/* {!this.state.isSignIn && <AlertError>{this.state.isSignIn}</AlertError>} */}\n          <FormField>\n            <InputPassword\n              tabIndex=\"2\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              autocomplete=\"off\"\n              onChange={this.handleChangeInput}\n            />\n            <TogglePassword\n              ref={this.openPasswordRef}\n              onClick={this.toggleVisiblePassword}\n            />\n          </FormField>\n          <FormOptions>\n            <div>\n              <label htmlFor=\"rememberMe\">\n                <input\n                  tabIndex=\"3\"\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  type=\"checkbox\"\n                  checked\n                  onChange={this.toggleChecked}\n                />\n              Remember Me\n            </label>\n            </div>\n            <NavLink to=\"/reset\">Forgot password?</NavLink>\n            <InputBtnSignIn\n              tabIndex=\"4\"\n              type=\"submit\"\n              value=\"LogIn\"\n              name=\"login\"\n              onClick={this.logInAccount}\n            />\n          </FormOptions>\n        </Form>\n      </>\n    );\n  }\n}\n\n// export const LogInPage: React.FC = () => {\n//   const [value, setValue] = useState({});\n\n//   const toggleChecked = (): void => {\n//     console.log(1);\n//   };\n\n//   const toggleVisiblePassword = (event: React.MouseEvent): void => {\n//     const span = event.target;\n//     span.previousElementSibling.setAttribute('type', span.previousElementSibling.getAttribute('type') === 'text' ? 'password' : 'text');\n//   };\n\n//   const handleChangeInput = ({ target: { value, id } }: React.ChangeEvent<HTMLInputElement>): void => {\n//     setValue({\n//       [id]: value,\n//     });\n//   }\n\n//   return (\n//     <Form>\n//       <InputText\n//         tabIndex=\"1\"\n//         id=\"email\"\n//         name=\"username\"\n//         placeholder=\"E-mail\"\n//         type=\"text\"\n//         autocomplete=\"off\"\n//         onChange={handleChangeInput}\n//       />\n//       <FormField>\n//         <InputPassword\n//           tabIndex=\"2\"\n//           id=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           type=\"password\"\n//           autocomplete=\"off\"\n//           onChange={handleChangeInput}\n//         />\n//         <TogglePassword onClick={toggleVisiblePassword} />\n//       </FormField>\n//       <FormOptions>\n//         <div>\n//           <label htmlFor=\"rememberMe\">\n//             <input\n//               tabIndex=\"3\"\n//               id=\"rememberMe\"\n//               name=\"rememberMe\"\n//               type=\"checkbox\"\n//               checked\n//               onChange={toggleChecked}\n//             />\n//             Remember Me\n//           </label>\n//         </div>\n//         <NavLink to=\"/\">Forgot password?</NavLink>\n//         <InputBtnSignIn\n//           tabIndex=\"4\"\n//           type=\"submit\"\n//           value=\"LogIn\"\n//           name=\"login\"\n//         />\n//       </FormOptions>\n//     </Form>\n//   );\n// };\n","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\SignInPage.tsx",["135"],"import React, { useState } from 'react';\nimport { Form, InputText, FormField, TogglePassword, InputBtnSignIn, FormFieldCaption, AlertError, AlertSuccess } from '../styledComponents';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nexport const SignInPage: React.FC = () => {\n  const [isError, setError] = useState('');\n  const [isSuccess, setSuccess] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n\n  const toggleVisiblePassword = (event: React.MouseEvent): void => {\n    const span = event.target;\n    span.previousElementSibling.setAttribute('type', span.previousElementSibling.getAttribute('type') === 'text' ? 'password' : 'text');\n  };\n\n  const changeName = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setFirstName(event.target.value.trim());\n    setError('');\n  };\n\n  const changeLastName = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setLastName(event.target.value.trim());\n    setError('');\n  };\n\n  const changeEmail = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setEmail(event.target.value.trim());\n    setError('');\n  };\n\n  const handleSetNewPassword = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setNewPassword(event.target.value.trim());\n    setError('');\n  };\n\n  const handleConfirmPassword = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setConfirmedPassword(event.target.value.trim());\n    setError('');\n  };\n\n  const signInAccount = (): void => {\n    const minNameLength = 3;\n    const minLengthPassword = 8;\n    const regExp = new RegExp(`^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([^_])([a-zA-Z0-9]){${minLengthPassword},}$`);\n\n    if (!firstName || firstName.trim().length < minNameLength || firstName[0].match(/\\d/)) {\n      setError('Name should be at least 3 symbols, don\\'t starts with decimal!');\n    }\n    if (!lastName || lastName.trim().length < minNameLength || lastName[0].match(/\\d/)) {\n      setError('LastName should be at least 4 symbols, don\\'t starts with decimal!');\n    }\n    if (!email || email.trim().length < minNameLength || !email.includes('@') || !email.split('@')[1].includes('.')) {\n      setError('Email should be at least 4 symbols, must contain @, and contain ends with \".\"');\n    }\n\n    if (!newPassword.match(regExp)) {\n      setError('Password must contains a lowercase letters, an uppercase letters, number and be at least 8 characters.');\n    }\n\n    if (confirmedPassword !== newPassword) {\n      setError('Passwords do not match');\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, newPassword)\n      .then(() => {\n        const user = firebase.auth().currentUser;\n        // setSuccess('Successful login');\n\n        user.updateProfile({\n          displayName: `${firstName} ${lastName}`,\n        }).then(() => {\n          setFirstName(firstName.toString());\n          setLastName(lastName.toString());\n        }).catch((error) => {\n          setError(error.message);\n        });\n\n        user.updateEmail(`${email}`).then(() => {\n          setEmail(email);\n        }).catch((error) => {\n          setError(error.message);\n        });\n\n        // setTimeout(() => setSuccess(''), 1000);\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  }\n\n  return (\n    <React.Fragment>\n      <Form>\n        <InputText\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          name=\"firstName\"\n          onChange={changeName}\n        />\n        <InputText\n          type=\"text\"\n          placeholder=\"Enter lastname\"\n          name=\"lastName\"\n          onChange={changeLastName}\n        />\n        <InputText\n          type=\"text\"\n          placeholder=\"Enter E-mail\"\n          name=\"email\"\n          autocomplete=\"email\"\n          onChange={changeEmail}\n        />\n        <FormField>\n          <InputText\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            autocomplete=\"new-password\"\n            onChange={handleSetNewPassword}\n          />\n          <TogglePassword onClick={toggleVisiblePassword} />\n        </FormField>\n        <FormFieldCaption>\n          Password must contains a lowercase letters, an uppercase letters, number and be at least 8 characters.\n        </FormFieldCaption>\n        {isError && <AlertError>{isError}</AlertError>}\n        {isSuccess && <AlertSuccess>{isSuccess}</AlertSuccess>}\n        <FormField>\n          <InputText\n            type=\"password\"\n            placeholder=\"Password confirm\"\n            name=\"password-confirm\"\n            onChange={handleConfirmPassword}\n          />\n          <TogglePassword onClick={toggleVisiblePassword} />\n        </FormField>\n        <InputBtnSignIn\n          type=\"button\"\n          value=\"Register\"\n          onClick={signInAccount}\n        />\n      </Form>\n    </React.Fragment>\n  );\n};\n","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\ModalUserBar\\index.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\UserPage.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\components\\ProfileMenu.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\components\\UserContentPage.tsx",["136","137","138"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ContentTitle, UserForm, FormField, ButtonSave, AlertError, AlertSuccess } from '../../styledComponents';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nconst UserPhotoWrapper = styled.div`\n  display: flex;\n  max-width: 100px;\n  max-height: 100px;\n`;\n\nconst UserPhoto = styled.img`\n  display: inline-block;\n  width: 100%;\n`;\n\nconst FormInput = styled.input`\n  border-radius: 2px;\n  border: 1px solid rgba(0,0,0,0.16);\n  padding: 12px 16px;\n  font-size: 15px;\n  line-height: 22px;\n  height: 48px;\n  margin-top: 20px;\n  color: #000;\n  width: 100%;\n  background-clip: padding-box;\n`;\n\nconst FormFields = styled.div`\n  display: flex;\n`;\n\nconst ButtonCancel = styled(ButtonSave)`\n  color: #000;\n  background-color: rgba(0,0,0,0.04);\n`;\n\ninterface UserContentPageProps {\n  toggleDisplay: () => void;\n}\n\nexport const UserContentPage: React.FC<UserContentPageProps> = ({ toggleDisplay }) => {\n  const user = firebase.auth().currentUser;\n  const storageRef = firebase.storage().ref().child(user?.email + '/profile.jpg');\n  let name = '';\n  let surname = '';\n  if (user?.displayName !== null) {\n    [name, surname] = user?.displayName.split(' ');\n  }\n  const mail = user?.email || '';\n  // const photo = user?.photoURL || '';\n  // console.log(photo);\n  console.log(user);\n  // const [firstName, setFirstName] = useState(name);\n  // const [lastName, setLastName] = useState(surname);\n  // const [email, setEmail] = useState(mail);\n\n  const [stateUser, setStateUser] = useState({\n    'firstName': name,\n    'lastName': surname,\n    'email': mail\n  });\n\n  const [isPhoto, setPhoto] = useState(user?.photoURL);\n  const [isError, setError] = useState('');\n  const [isSuccess, setSuccess] = useState('');\n\n  const downloadData = (): void => {\n    storageRef.getDownloadURL()\n      .then((url) => {\n        setPhoto(url);\n      })\n      .catch((error) => {\n        console.error(`Something went wrong, ${error.message}`);\n        setPhoto(user?.photoURL);\n      });\n  };\n\n  downloadData();\n\n  const changeName = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setStateUser(() => ({ ...stateUser, 'firstName': event.target.value.trim() }));\n    // setFirstName(event.target.value.trim());\n    setError('');\n  };\n\n  const changeLastName = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setStateUser(() => ({ ...stateUser, ...{ 'lastName': event.target.value.trim() } }));\n    // setLastName(event.target.value.trim());\n    setError('');\n  };\n\n  const changeEmail = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setStateUser(() => ({ ...stateUser, ...{ 'email': event.target.value.trim() } }));\n    // setEmail(event.target.value.trim());\n    setError('');\n  };\n\n  const handleBtnSaveClick = (): void => {\n    const minNameLength = 3;\n    if (!stateUser.firstName || stateUser.firstName.trim().length < minNameLength || stateUser.firstName[0].match(/\\d/)) {\n      setError('Name should be at least 4 symbols, don\\'t starts with decimal!');\n    }\n    if (!stateUser.lastName || stateUser.lastName.trim().length < minNameLength || stateUser.lastName[0].match(/\\d/)) {\n      setError('LastName should be at least 4 symbols, don\\'t starts with decimal!');\n    }\n    if (!stateUser.email || stateUser.email.trim().length < minNameLength || !stateUser.email.includes('@') || !stateUser.email.split('@')[1].includes('.')) {\n      setError('Email should be at least 4 symbols, must contain @, and contain ends with \".\"');\n    }\n\n    user.updateProfile({\n      displayName: `${stateUser.firstName} ${stateUser.lastName}`,\n      photoURL: `${isPhoto}`,\n    }).then(() => {\n      // setFirstName(firstName.toString());\n      // setLastName(lastName.toString());\n      // set Image Name\n    }).catch((error) => {\n      setError(error.message);\n    });\n\n    user.updateEmail(`${stateUser.email}`).then(() => {\n      // setEmail(email);\n      //set Email\n    }).catch((error) => {\n      setError(error.message);\n    });\n\n    setSuccess('Personal information changed');\n\n    setTimeout(() => {\n      setSuccess('');\n      toggleDisplay();\n    }, 1000);\n  };\n\n  const handleBtnCancelClick = (): void => {\n    setStateUser({\n      'firstName': name,\n      'lastName': surname,\n      'email': mail\n    });\n    toggleDisplay();\n    // setFirstName(name);\n    // setLastName(name);\n    // setEmail(mail);\n  };\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const selectedFile = event.target!.files[0];\n    const reader = new FileReader();\n\n    if (!selectedFile.type.match('image.*')) {\n      setError(\"Image only please....\");\n    }\n\n    reader.onload = function (e) {\n      const b64 = e.target.result.split(',')[1];\n      const byteCharacters = atob(decodeURIComponent(b64));\n      const byteNumbers = new Array(byteCharacters.length);\n\n      for (let i = 0; i < byteCharacters.length; i += 1) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n\n      const byteArray = new Uint8Array(byteNumbers);\n\n      const blob = new Blob([byteArray], { type: 'text/plain' });\n      // const imageUrl = URL.createObjectURL(blob, { type: 'text/plain' });\n\n      // Create a Storage Ref w/ username\n      const storageRef = firebase.storage().ref().child(user?.email + '/profile.jpg');\n\n      // Upload file\n      const task = storageRef.put(byteArray).then(() => setPhoto(reader.result));\n    };\n    reader.readAsDataURL(selectedFile);\n  }\n\n  return (\n    <>\n      <UserPhotoWrapper>\n        <UserPhoto\n          src={isPhoto}\n          alt={`${stateUser.firstName}'s photo`}\n        />\n      </UserPhotoWrapper>\n      <ContentTitle>\n        Personal Information\n      </ContentTitle>\n      <UserForm>\n        <FormField>\n          <FormInput\n            type='text'\n            id='firstName'\n            placeholder='Name'\n            name='firstName'\n            value={stateUser.firstName}\n            onChange={changeName}\n          />\n        </FormField>\n        {isError && <AlertError>{isError}</AlertError>}\n        <FormField>\n          <FormInput\n            type='text'\n            id='lastName'\n            placeholder='LastName'\n            name='lastName'\n            value={stateUser.lastName}\n            onChange={changeLastName}\n          />\n        </FormField>\n        <FormField>\n          <FormInput\n            type='text'\n            id='user-email'\n            placeholder='E-mail'\n            name='email'\n            value={stateUser.email}\n            onChange={changeEmail}\n          />\n        </FormField>\n        {isSuccess && <AlertSuccess>{isSuccess}</AlertSuccess>}\n        <FormField>\n          <FormInput\n            type='file'\n            id='user-photo'\n            placeholder='Add your photo'\n            name='userPhoto'\n            accept='image/*'\n            onChange={handleFileSelect}\n          />\n        </FormField>\n        <FormFields>\n          <ButtonSave\n            type='button'\n            name='submitAction'\n            value='Save'\n            onClick={handleBtnSaveClick}\n          >\n            Save\n          </ButtonSave>\n          <ButtonCancel\n            type='button'\n            name='submitAction'\n            value='Cancel'\n            onClick={handleBtnCancelClick}\n          >\n            Cancel\n          </ButtonCancel>\n        </FormFields>\n      </UserForm>\n    </>\n  );\n};\n","D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\components\\UserPasswordPage.tsx",[],"D:\\Site\\Lessons\\RsSchool\\rsclone\\103\\src\\Header\\pages\\ResetPage.tsx",["139"],"import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AlertError, InputText, ButtonSave, Form, Wrapper, Content, ContentHeader, ContentWrapper } from '../styledComponents';\nimport svgArrowLeft from '../public/arrow-left.svg';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst StyledNav = styled(NavLink)`\n  margin-top: -4px;\n  margin-left: -8px;\n  margin-right: 16px;\n  width: 32px;\n  height: 32px;\n  display: inline-block;\n  float: left;\n  background: rgba(0,0,0,0.08) url(${svgArrowLeft}) no-repeat center center;\n  background-size: 24px 24px;\n  border-radius: 50%;\n  transition: background-color 0.2s ease-in-out;\n  transform: rotateY(180deg);\n\n  &:hover {\n    background-color: rgba(0,0,0,0.16);\n  }\n`;\n\nconst PageTitle = styled.div`\n  padding-bottom: 16px;\n  color: #000;\n  font-size: 24px;\n  line-height: 26px;\n  font-weight: 500;\n  margin: 0;\n`;\n\nconst FormInfo = styled.div`\n  margin-top: 20px;\n`;\n\ninterface ResetPageProps {\n  onResetPassword: () => void;\n}\n\nexport const ResetPage: React.FC<ResetPageProps> = ({ onResetPassword }) => {\n  const addBodyClass = (className: string): void => document.body.classList.add(className);\n  const removeBodyClass = (className: string): void => document.body.classList.remove(className);\n  const [isErrorSignIn, setErrorSignIn] = useState('');\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    addBodyClass('body');\n\n    return () => {\n      removeBodyClass('body');\n    }\n  }, ['body']);\n\n  const toggleErrorComponent = (isError: boolean): void => {\n    setErrorSignIn(isError);\n  }\n\n  const changeUserEmail = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setEmail(event.target.value);\n  };\n\n  const clickSendBtnHandler = (): void => {\n    const minEmailLength = 5;\n\n    if (!email || email.trim().length < minEmailLength || !email.includes('@') || !email.split('@')[1].includes('.')) {\n      setErrorSignIn('Email should be at least 5 symbols, must contain @, and contain ends with \".\"');\n    } else {\n      firebase.auth().sendPasswordResetEmail(email).then(() => {\n        onResetPassword('You should receive an email with further instructions shortly.');\n\n        setTimeout(() => onResetPassword(''), 2000);\n      }).catch((error) => {\n        setErrorSignIn(error.message);\n      });\n    }\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Content>\n          <ContentHeader>\n            <StyledNav exact to=\"/authorization\" />\n            <PageTitle>\n              Password Recovery\n            </PageTitle>\n          </ContentHeader>\n          <ContentWrapper>\n            {isErrorSignIn\n              && (<AlertError>{isErrorSignIn}</AlertError>)\n            }\n            <Form>\n              <FormInfo>\n                Enter your E-mail and we will send you a link to reset your password.\n              </FormInfo>\n              <InputText\n                type='text'\n                name='username'\n                placeholder='E-mail'\n                autoFocus\n                onChange={changeUserEmail}\n              />\n              <ButtonSave\n                type='button'\n                value='Send'\n                onClick={clickSendBtnHandler}\n              >\n                Send E-mail\n              </ButtonSave>\n            </Form>\n          </ContentWrapper>\n        </Content>\n      </Wrapper>\n    </>\n  );\n};\n",{"ruleId":"140","severity":1,"message":"141","line":12,"column":16,"nodeType":"142","messageId":"143","endLine":16,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":8,"column":16,"nodeType":"142","messageId":"143","endLine":10,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":10,"column":16,"nodeType":"142","messageId":"143","endLine":13,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":8,"column":16,"nodeType":"142","messageId":"143","endLine":11,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":40,"column":3,"nodeType":"144","messageId":"143","endLine":40,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":49,"column":18,"nodeType":"145","messageId":"143","endLine":49,"endColumn":48},{"ruleId":"140","severity":1,"message":"146","line":49,"column":19,"nodeType":"147","messageId":"148","endLine":49,"endColumn":44},{"ruleId":"140","severity":1,"message":"141","line":55,"column":19,"nodeType":"145","messageId":"143","endLine":55,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":60,"column":14,"nodeType":"151","messageId":"152","endLine":60,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":66,"column":3,"nodeType":"144","messageId":"143","endLine":66,"endColumn":11},{"ruleId":"149","severity":1,"message":"153","line":67,"column":15,"nodeType":"151","messageId":"152","endLine":67,"endColumn":20},{"ruleId":"149","severity":1,"message":"154","line":9,"column":21,"nodeType":"151","messageId":"152","endLine":9,"endColumn":31},{"ruleId":"155","severity":1,"message":"156","line":154,"column":26,"nodeType":"157","messageId":"158","endLine":154,"endColumn":39,"suggestions":"159"},{"ruleId":"149","severity":1,"message":"160","line":172,"column":13,"nodeType":"151","messageId":"152","endLine":172,"endColumn":17},{"ruleId":"149","severity":1,"message":"161","line":179,"column":13,"nodeType":"151","messageId":"152","endLine":179,"endColumn":17},{"ruleId":"149","severity":1,"message":"162","line":60,"column":9,"nodeType":"151","messageId":"152","endLine":60,"endColumn":29},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","FunctionExpression","ArrowFunctionExpression","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","@typescript-eslint/no-unused-vars","'response' is defined but never used.","Identifier","unusedVar","'error' is defined but never used.","'setSuccess' is assigned a value but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["163"],"'blob' is assigned a value but never used.","'task' is assigned a value but never used.","'toggleErrorComponent' is assigned a value but never used.",{"messageId":"164","fix":"165","desc":"166"},"suggestOptionalChain",{"range":"167","text":"168"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",[4589,4590],"?"]